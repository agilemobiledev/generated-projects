<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow  -->

	<persistence-context />

	<!-- Flow input parameters -->
	<!-- book: the entity to edit. If null, then we create it here -->
	<input name="book" required="false" value="flowScope.book"/>	
	<on-start>
		<evaluate expression="book == null ? bookService.newWithDefaults : book" result="flowScope.book" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="bookSubEdit" else="bookEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="bookEdit" parent="#bookEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,book.id,bookConverter.print(book))" />
		</on-render>

		<!-- event handlers -->
		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="bookService.save(book)" />
			<evaluate expression="messageUtil.info('status_saved_ok')" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="bookService.save(book)" />
			<evaluate expression="primeFacesUtil.forceClose()"/>
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,book)"/>
		</transition>

		<!-- transitions -->
		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="bookService.delete(book)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="bookSubEdit" view="bookEdit.xhtml" parent="#bookEditCommon">
		<!-- events handlers -->
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>

		<!-- transitions -->
		<transition on="cancel" to="cancelEdit" />
	</view-state>

	<!-- COMMON-EDIT -->
	<view-state id="bookEditCommon">

		<!-- account transitions (x-to-one) -->
		<transition on="selectAccount" to="selectAccount" />
		<transition on="editAccount" to="editAccount">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewAccount" to="editAccount">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
	</view-state>

	<!-- SUBFLOW account (x-to-one) -->
	<subflow-state id="selectAccount" subflow="account">
		<input name="sub" value="true" />
		<transition on="accountSelected" to="startChoice">
			<evaluate expression="book.setAccount(currentEvent.attributes.accountSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.book_account)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editAccount" subflow="account/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="account" value="book.account" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.book_account)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- END EDIT -->
	<end-state id="endEdit">
		<output name="book" value="book" />
	</end-state>
</flow>