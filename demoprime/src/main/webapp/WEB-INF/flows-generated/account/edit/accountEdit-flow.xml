<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow  -->

	<persistence-context />
	<!-- Flow vars -->
	<var name="tabBean" class="fr.jaxio.demo.web.util.TabBean"/>

	<!-- Flow input parameters -->
	<!-- account: the entity to edit. If null, then we create it here -->
	<input name="account" required="false" value="flowScope.account"/>	
	<on-start>
		<evaluate expression="account == null ? accountService.newWithDefaults : account" result="flowScope.account" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="accountSubEdit" else="accountEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="accountEdit" parent="#accountEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,account.id,accountConverter.print(account))" />
		</on-render>

		<!-- event handlers -->
		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="accountService.save(account)" />
			<evaluate expression="messageUtil.info('status_saved_ok')" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="accountService.save(account)" />
			<evaluate expression="primeFacesUtil.forceClose()"/>
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,account)"/>
		</transition>

		<!-- transitions -->
		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="accountService.delete(account)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="accountSubEdit" view="accountEdit.xhtml" parent="#accountEditCommon">
		<!-- events handlers -->
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>

		<!-- transitions -->
		<transition on="cancel" to="cancelEdit" />
	</view-state>

	<!-- COMMON-EDIT -->
	<view-state id="accountEditCommon">
		<on-entry>
			<!-- Prefetch one to many lists and convert them to dataModel -->
			<evaluate expression="account.books" result="flowScope.books" result-type="dataModel" />
			<evaluate expression="account.documents" result="flowScope.documents" result-type="dataModel" />
			<!-- Prefetch many to many lists and convert them to dataModel -->
			<evaluate expression="account.roles" result="flowScope.roles" result-type="dataModel" />
		</on-entry>

		<!-- homeAddress transitions (x-to-one) -->
		<transition on="selectHomeAddress" to="selectHomeAddress" />
		<transition on="editHomeAddress" to="editHomeAddress">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewHomeAddress" to="editHomeAddress">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- books transitions (one-to-many) -->
		<transition on="addBook" to="addBook" />
		<transition on="editBook" to="editBook">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewBook" to="editBook">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeBook">
			<evaluate expression="account.removeBook(flowScope.books.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.account_books)" />
		</transition>

		<!-- documents transitions (one-to-many) -->
		<transition on="addDocument" to="addDocument" />
		<transition on="editDocument" to="editDocument">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewDocument" to="editDocument">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeDocument">
			<evaluate expression="account.removeDocument(flowScope.documents.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.account_documents)" />
		</transition>

		<!-- roles transitions (many-to-many) -->
		<transition on="searchRole" to="searchRole" />
		<transition on="addRole" to="addRole" />
		<transition on="viewRole" to="editRole">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeRole">
			<evaluate expression="account.removeRole(flowScope.roles.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.account_roles)" />
		</transition>
	</view-state>

	<!-- SUBFLOW homeAddress (x-to-one) -->
	<subflow-state id="selectHomeAddress" subflow="address">
		<input name="sub" value="true" />
		<transition on="addressSelected" to="startChoice">
			<evaluate expression="account.setHomeAddress(currentEvent.attributes.addressSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.account_homeAddress)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editHomeAddress" subflow="address/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="address" value="account.homeAddress" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.account_homeAddress)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW books (one-to-many) -->
	<subflow-state id="addBook" subflow="book/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="account.addBook(currentEvent.attributes.book)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.account_books)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editBook" subflow="book/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="book" value="flowScope.books.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.account_books)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW documents (one-to-many) -->
	<subflow-state id="addDocument" subflow="document/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="account.addDocument(currentEvent.attributes.document)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.account_documents)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editDocument" subflow="document/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="document" value="flowScope.documents.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.account_documents)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW roles (many-to-many) -->
	<subflow-state id="searchRole" subflow="role">
		<input name="sub" value="true" />
		<transition on="roleSelected" to="startChoice">
			<evaluate expression="account.addRole(currentEvent.attributes.roleSelected)" />
			<evaluate expression="messageUtil.info('status_added_existing_ok',resourceBundle.account_roles)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="addRole" subflow="role/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="account.addRole(currentEvent.attributes.role)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.account_roles)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editRole" subflow="role/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="role" value="flowScope.roles.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.account_roles)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- END EDIT -->
	<end-state id="endEdit">
		<output name="account" value="account" />
	</end-state>
</flow>