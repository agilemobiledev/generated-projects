/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces-sd:src/main/java/EntityConverterConfig.p.vm.java
 */
package com.jaxio.demo.web.converter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import com.jaxio.demo.domain.Account;
import com.jaxio.demo.domain.Address;
import com.jaxio.demo.domain.Book;
import com.jaxio.demo.domain.Document;
import com.jaxio.demo.domain.Legacy;
import com.jaxio.demo.domain.LegacyPk;
import com.jaxio.demo.domain.Role;
import com.jaxio.demo.domain.more.MoreTypesDemo;
import com.jaxio.demo.repository.AccountRepository;
import com.jaxio.demo.repository.AddressRepository;
import com.jaxio.demo.repository.BookRepository;
import com.jaxio.demo.repository.DocumentRepository;
import com.jaxio.demo.repository.LegacyRepository;
import com.jaxio.demo.repository.RoleRepository;
import com.jaxio.demo.repository.more.MoreTypesDemoRepository;

/**
 * Responsible for creating Entity JSF converters.
 * Each converter provides a 'print' method to convert an entity instance to a friendly string representation (readable by humans...).
 */
@Configuration
public class EntityConverterConfig {

    // -- AccountConverter

    @Autowired
    AccountRepository accountRepository;

    @Bean
    public AccountConverter accountConverter() {
        return new AccountConverter(accountRepository);
    }

    public class AccountConverter extends GenericConverter<Account, String> {
        public AccountConverter(AccountRepository accountRepository) {
            super(accountRepository, "username");
        }
    }

    // -- AddressConverter

    @Autowired
    AddressRepository addressRepository;

    @Bean
    public AddressConverter addressConverter() {
        return new AddressConverter(addressRepository);
    }

    public class AddressConverter extends GenericConverter<Address, Integer> {
        public AddressConverter(AddressRepository addressRepository) {
            super(addressRepository, "streetName + '/' + city");
        }
    }

    // -- BookConverter

    @Autowired
    BookRepository bookRepository;

    @Bean
    public BookConverter bookConverter() {
        return new BookConverter(bookRepository);
    }

    public class BookConverter extends GenericConverter<Book, Integer> {
        public BookConverter(BookRepository bookRepository) {
            super(bookRepository, "title");
        }
    }

    // -- DocumentConverter

    @Autowired
    DocumentRepository documentRepository;

    @Bean
    public DocumentConverter documentConverter() {
        return new DocumentConverter(documentRepository);
    }

    public class DocumentConverter extends GenericConverter<Document, String> {
        public DocumentConverter(DocumentRepository documentRepository) {
            super(documentRepository, "documentContentType + '/' + documentFileName");
        }
    }

    // -- LegacyConverter

    @Autowired
    LegacyRepository legacyRepository;

    @Bean
    public LegacyConverter legacyConverter() {
        return new LegacyConverter(legacyRepository);
    }

    public class LegacyConverter extends GenericConverter<Legacy, LegacyPk> {
        public LegacyConverter(LegacyRepository legacyRepository) {
            super(legacyRepository, "extraInfo");
        }
    }

    // -- MoreTypesDemoConverter

    @Autowired
    MoreTypesDemoRepository moreTypesDemoRepository;

    @Bean
    public MoreTypesDemoConverter moreTypesDemoConverter() {
        return new MoreTypesDemoConverter(moreTypesDemoRepository);
    }

    public class MoreTypesDemoConverter extends GenericConverter<MoreTypesDemo, Integer> {
        public MoreTypesDemoConverter(MoreTypesDemoRepository moreTypesDemoRepository) {
            super(moreTypesDemoRepository, "numberInt + '/' + numberLong + '/' + numberDouble");
        }
    }

    // -- RoleConverter

    @Autowired
    RoleRepository roleRepository;

    @Bean
    public RoleConverter roleConverter() {
        return new RoleConverter(roleRepository);
    }

    public class RoleConverter extends GenericConverter<Role, Integer> {
        public RoleConverter(RoleRepository roleRepository) {
            super(roleRepository, "roleName");
        }
    }
}