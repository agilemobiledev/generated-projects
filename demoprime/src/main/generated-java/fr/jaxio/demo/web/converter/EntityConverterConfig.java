/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/converter/EntityConverterConfig.p.vm.java
 */
package fr.jaxio.demo.web.converter;

import javax.inject.Inject;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import fr.jaxio.demo.domain.Account;
import fr.jaxio.demo.domain.Address;
import fr.jaxio.demo.domain.Book;
import fr.jaxio.demo.domain.Document;
import fr.jaxio.demo.domain.Legacy;
import fr.jaxio.demo.domain.LegacyPk;
import fr.jaxio.demo.domain.Role;
import fr.jaxio.demo.domain.more.MoreTypesDemo;
import fr.jaxio.demo.service.AccountService;
import fr.jaxio.demo.service.AddressService;
import fr.jaxio.demo.service.BookService;
import fr.jaxio.demo.service.DocumentService;
import fr.jaxio.demo.service.LegacyService;
import fr.jaxio.demo.service.RoleService;
import fr.jaxio.demo.service.more.MoreTypesDemoService;

/**
 * Responsible for creating Entity JSF converters.
 * Each converter provides a 'print' method to convert an entity instance to a friendly string representation (readable by humans...).
 */
@Configuration
public class EntityConverterConfig {

    // -- AccountConverter

    @Inject
    AccountService accountService;

    @Bean
    public AccountConverter accountConverter() {
        return new AccountConverter(accountService);
    }

    public class AccountConverter extends GenericJsfConverter<Account, String> {
        public AccountConverter(AccountService accountService) {
            super(accountService);
        }

        @Override
        public String print(Account account) {
            return account == null ? "" : account.getUsername();
        }

    }

    // -- AddressConverter

    @Inject
    AddressService addressService;

    @Bean
    public AddressConverter addressConverter() {
        return new AddressConverter(addressService);
    }

    public class AddressConverter extends GenericJsfConverter<Address, Integer> {
        public AddressConverter(AddressService addressService) {
            super(addressService);
        }

        @Override
        public String print(Address address) {
            return address == null ? "" : address.getStreetName() + "/" + address.getCity();
        }

    }

    // -- BookConverter

    @Inject
    BookService bookService;

    @Bean
    public BookConverter bookConverter() {
        return new BookConverter(bookService);
    }

    public class BookConverter extends GenericJsfConverter<Book, Integer> {
        public BookConverter(BookService bookService) {
            super(bookService);
        }

        @Override
        public String print(Book book) {
            return book == null ? "" : book.getTitle();
        }

    }

    // -- DocumentConverter

    @Inject
    DocumentService documentService;

    @Bean
    public DocumentConverter documentConverter() {
        return new DocumentConverter(documentService);
    }

    public class DocumentConverter extends GenericJsfConverter<Document, String> {
        public DocumentConverter(DocumentService documentService) {
            super(documentService);
        }

        @Override
        public String print(Document document) {
            return document == null ? "" : document.getDocumentContentType() + "/" + document.getDocumentFileName();
        }

    }

    // -- LegacyConverter

    @Inject
    LegacyService legacyService;

    @Bean
    public LegacyConverter legacyConverter() {
        return new LegacyConverter(legacyService);
    }

    public class LegacyConverter extends GenericJsfConverter<Legacy, LegacyPk> {
        public LegacyConverter(LegacyService legacyService) {
            super(legacyService);
        }

        @Override
        public String print(Legacy legacy) {
            return legacy == null ? "" : legacy.getExtraInfo();
        }

    }

    // -- MoreTypesDemoConverter

    @Inject
    MoreTypesDemoService moreTypesDemoService;

    @Bean
    public MoreTypesDemoConverter moreTypesDemoConverter() {
        return new MoreTypesDemoConverter(moreTypesDemoService);
    }

    public class MoreTypesDemoConverter extends GenericJsfConverter<MoreTypesDemo, Integer> {
        public MoreTypesDemoConverter(MoreTypesDemoService moreTypesDemoService) {
            super(moreTypesDemoService);
        }

        @Override
        public String print(MoreTypesDemo moreTypesDemo) {
            return moreTypesDemo == null ? "" : moreTypesDemo.getNumberInt() + "/" + moreTypesDemo.getNumberLong() + "/" + moreTypesDemo.getNumberDouble();
        }

    }

    // -- RoleConverter

    @Inject
    RoleService roleService;

    @Bean
    public RoleConverter roleConverter() {
        return new RoleConverter(roleService);
    }

    public class RoleConverter extends GenericJsfConverter<Role, Integer> {
        public RoleConverter(RoleService roleService) {
            super(roleService);
        }

        @Override
        public String print(Role role) {
            return role == null ? "" : role.getRoleName();
        }

    }
}