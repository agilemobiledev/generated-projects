/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/dao/support/EntitySelectors.p.vm.java
 */
package com.jaxio.dao.support;

import javax.persistence.metamodel.SingularAttribute;
import com.jaxio.domain.Account;
import com.jaxio.domain.Address;
import com.jaxio.domain.Book;
import com.jaxio.domain.Document;
import com.jaxio.domain.Legacy;
import com.jaxio.domain.LegacyPk;
import com.jaxio.domain.Role;
import com.jaxio.domain.more.MoreTypesDemo;

/**
 * Convenient type safe {@link EntitySelector}s. 
 */
@SuppressWarnings("serial")
public class EntitySelectors {

    public static class AccountSelector<E> extends EntitySelector<E, Account, String> {
        public AccountSelector(SingularAttribute<E, String> field) {
            super(field);
        }

        public static <E> AccountSelector<E> newAccountSelector(SingularAttribute<E, String> field) {
            return new AccountSelector<E>(field);
        }
    }

    public static class AddressSelector<E> extends EntitySelector<E, Address, Integer> {
        public AddressSelector(SingularAttribute<E, Integer> field) {
            super(field);
        }

        public static <E> AddressSelector<E> newAddressSelector(SingularAttribute<E, Integer> field) {
            return new AddressSelector<E>(field);
        }
    }

    public static class BookSelector<E> extends EntitySelector<E, Book, Integer> {
        public BookSelector(SingularAttribute<E, Integer> field) {
            super(field);
        }

        public static <E> BookSelector<E> newBookSelector(SingularAttribute<E, Integer> field) {
            return new BookSelector<E>(field);
        }
    }

    public static class DocumentSelector<E> extends EntitySelector<E, Document, String> {
        public DocumentSelector(SingularAttribute<E, String> field) {
            super(field);
        }

        public static <E> DocumentSelector<E> newDocumentSelector(SingularAttribute<E, String> field) {
            return new DocumentSelector<E>(field);
        }
    }

    public static class LegacySelector<E> extends EntitySelector<E, Legacy, LegacyPk> {
        public LegacySelector(SingularAttribute<E, LegacyPk> field) {
            super(field);
        }

        public static <E> LegacySelector<E> newLegacySelector(SingularAttribute<E, LegacyPk> field) {
            return new LegacySelector<E>(field);
        }
    }

    public static class MoreTypesDemoSelector<E> extends EntitySelector<E, MoreTypesDemo, Integer> {
        public MoreTypesDemoSelector(SingularAttribute<E, Integer> field) {
            super(field);
        }

        public static <E> MoreTypesDemoSelector<E> newMoreTypesDemoSelector(SingularAttribute<E, Integer> field) {
            return new MoreTypesDemoSelector<E>(field);
        }
    }

    public static class RoleSelector<E> extends EntitySelector<E, Role, Integer> {
        public RoleSelector(SingularAttribute<E, Integer> field) {
            super(field);
        }

        public static <E> RoleSelector<E> newRoleSelector(SingularAttribute<E, Integer> field) {
            return new RoleSelector<E>(field);
        }
    }
}