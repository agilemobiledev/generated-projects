/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/SearchForm.e.vm.java
 */
package com.jaxio.web.domain;

import static com.jaxio.dao.support.EntitySelectors.AddressSelector.newAddressSelector;
import static com.jaxio.dao.support.PropertySelectors.BooleanSelector.newBooleanSelector;
import static com.jaxio.dao.support.PropertySelectors.CivilitySelector.newCivilitySelector;
import static com.jaxio.dao.support.Ranges.RangeDate.newRangeDate;
import static com.jaxio.domain.Account_.addressId;
import static com.jaxio.domain.Account_.birthDate;
import static com.jaxio.domain.Account_.civility;
import static com.jaxio.domain.Account_.isEnabled;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import com.jaxio.dao.support.EntitySelectors.AddressSelector;
import com.jaxio.dao.support.PropertySelectors.BooleanSelector;
import com.jaxio.dao.support.PropertySelectors.CivilitySelector;
import com.jaxio.dao.support.Ranges.RangeDate;
import com.jaxio.domain.Account;
import com.jaxio.web.domain.support.SearchFormBase;

/**
 * Simple parameters holder for account search.
 */
@Component
@Scope("session")
public class AccountSearchForm extends SearchFormBase {
    private static final long serialVersionUID = 1L;

    private Account account = new Account();
    private RangeDate<Account> birthDateRange = newRangeDate(birthDate);
    private BooleanSelector<Account> isEnabledSelector = newBooleanSelector(isEnabled);
    private CivilitySelector<Account> civilitySelector = newCivilitySelector(civility);
    private AddressSelector<Account> homeAddressSelector = newAddressSelector(addressId);

    public Account getAccount() {
        return account;
    }

    // Ranges, used from the view.
    public RangeDate<Account> getBirthDateRange() {
        return birthDateRange;
    }

    // Selectors for property
    public BooleanSelector<Account> getIsEnabledSelector() {
        return isEnabledSelector;
    }

    public CivilitySelector<Account> getCivilitySelector() {
        return civilitySelector;
    }

    // Selectors for x-to-one associations
    public AddressSelector<Account> getHomeAddressSelector() {
        return homeAddressSelector;
    }
}