/*
 * (c) Copyright 2005-2012 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring:src/main/java/conversation/SessionExpirationFilter.p.vm.java
 */
package com.jaxio.web.conversation;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.filter.OncePerRequestFilter;

/**
 * This filter handles session expiration during ajax request.
 * IMPORTANT: The spring security filter MUST be placed after this one.
 *
 * Note: if you are not using Spring Security filter you do not need this filter since you can 
 * handle ViewExpiredException as any other exception (see {@link ConversationAwareExceptionHandler}).
 */
public class SessionExpirationFilter extends OncePerRequestFilter {
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {

        if (isAjax(request) && !request.isRequestedSessionIdValid()) {
            response.getWriter().print(xmlPartialRedirectToPage(request, "/login.faces?session_expired=1"));
            response.flushBuffer();
            return;
        }

        filterChain.doFilter(request, response);
    }

    private boolean isAjax(HttpServletRequest request) {
        return "XMLHttpRequest".equals(request.getHeader("X-Requested-With"));
    }

    private String xmlPartialRedirectToPage(HttpServletRequest request, String page) {
        return "<?xml version='1.0' encoding='UTF-8'?>" //
                + "<partial-response>" //
                + "<redirect url=\"" + request.getContextPath() + page + "\"/>" //
                + "</partial-response>";
    }
}