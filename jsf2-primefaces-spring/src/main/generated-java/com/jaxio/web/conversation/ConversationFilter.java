/*
 * (c) Copyright 2005-2012 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring:src/main/java/conversation/ConversationFilter.p.vm.java
 */
package com.jaxio.web.conversation;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.filter.OncePerRequestFilter;

/**
 * Filter responsible for creating/resuming {@link Conversation}.
 * By convention, the conversation id is carried by the _cid_ parameter.
 * To create a new conversation, you must request the initial conversation view and pass the _ncid_=value parameter.
 */
public class ConversationFilter extends OncePerRequestFilter {
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {

        String cid = request.getParameter("_cid_");

        if (cid != null) {
            // -----------------------------
            // RESUME existing conversation
            // -----------------------------
            try {
                ConversationManager.getInstance().resumeConversation(cid, request);
            } catch (UnexpectedConversationException uue) {
                response.sendRedirect(request.getContextPath() + uue.redirectUrl);
                return;
            }

            try {
                filterChain.doFilter(request, response);
            } finally {
                ConversationManager.getInstance().pauseCurrentConversation();
            }
        } else if (!request.getRequestURI().contains("/javax.faces.resource/") && "true".equals(request.getParameter("_ncid_"))) {
            // -----------------------------
            // CREATE new conversation
            // -----------------------------
            ConversationManager cm = ConversationManager.getInstance();

            // Limitation (per user) on the number of simultaneous conversations.
            if (cm.isMaxConversationsReached(request.getSession())) {
                response.sendRedirect(request.getContextPath() + "/error/limit.faces");
                return;
            } else {
                // CREATE a new conversation
                Conversation conversation = cm.createConversation(request);
                cm.pauseCurrentConversation();
                response.sendRedirect(request.getContextPath() + conversation.getMenuUrl());
                return;
            }
        } else {
            // -----------------------------
            // Not related to conversations
            // -----------------------------
            filterChain.doFilter(request, response);
        }
    }
}