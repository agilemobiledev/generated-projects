/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3-sd:src/main/java/formatter/Formatter.e.vm.java
 */
package com.company.demo.formatter;

import static org.apache.commons.lang.StringUtils.isBlank;

import java.text.ParseException;
import java.util.Locale;

import com.company.demo.domain.Book;
import com.company.demo.repository.BookRepository;
import com.company.demo.formatter.support.DiscoverableFormatter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * {@link Formatter} for {@link Book} that is picked by automatically by {@link CustomFormattingConversionServiceFactory}
 *
 * @see Formatter
 * @see CustomFormattingConversionServiceFactory
 */
@Component
public class BookFormatter implements DiscoverableFormatter<Book> {

    @Autowired
    private BookRepository bookRepository;

    @Override
    public Class<Book> getTarget() {
        return Book.class;
    }

    @Override
    public String print(Book book, Locale locale) {
        if (book == null) {
            return "";
        }

        StringBuilder sb = new StringBuilder();
        // make a nice display string here...

        if (book.getTitle() != null) {
            sb.append(book.getTitle()).append(" ");
        }

        if (sb.length() > 0) {
            return sb.toString();
        } else if (book.isNew()) {
            return book.getId().toString();
        } else {
            return book.toString();
        }
    }

    @Override
    public Book parse(String text, Locale locale) throws ParseException {
        if (isBlank(text)) {
            return new Book();
        }
        Book book = bookRepository.findOne(new Integer(text));
        return book != null ? book : new Book();
    }
}
