/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3-sd:src/main/java/formatter/Formatter.e.vm.java
 */
package com.jaxio.demo.formatter;

import static org.apache.commons.lang.StringUtils.isBlank;

import java.text.ParseException;
import java.util.Locale;

import com.jaxio.demo.domain.Legacy;
import com.jaxio.demo.domain.Legacy_;
import com.jaxio.demo.repository.LegacyRepository;
import com.jaxio.demo.formatter.support.DiscoverableFormatter;
import com.jaxio.demo.formatter.support.FormatterUtil;
import com.jaxio.demo.domain.LegacyPk;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * {@link Formatter} for {@link Legacy} that is picked by automatically by {@link CustomFormattingConversionServiceFactory}
 * 
 * @see Formatter
 * @see CustomFormattingConversionServiceFactory
 */
@Component
public class LegacyFormatter implements DiscoverableFormatter<Legacy> {

    @Autowired
    private LegacyRepository legacyRepository;

    @Override
    public Class<Legacy> getTarget() {
        return Legacy.class;
    }

    @Override
    public String print(Legacy legacy, Locale locale) {
        return FormatterUtil.print(Legacy_.extraInfo.getName(), legacy, locale);
    }

    @Override
    public Legacy parse(String text, Locale locale) throws ParseException {
        if (isBlank(text)) {
            return new Legacy();
        }
        Legacy legacy = legacyRepository.findOne(LegacyPk.fromString(text));
        return legacy != null ? legacy : new Legacy();
    }
}
